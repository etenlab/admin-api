# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @key(fields: String!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT

directive @link(import: [link__Import], url: String!) on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

type Application {
  app_name: String!
  id: Int!
}

type Mutation {
  createApplication(newApplicationData: NewApplicationInput!): Application!
  createOrganization(newOrganizationData: NewOrganizationInput!): Organization!
  createRole(newRoleData: NewRoleInput!): Role!
  createUser(newUserData: NewUserInput!): User!
  createUserRole(newUserRoleData: NewUserRoleInput!): UserRole!
  deleteApplication(id: Int!): Boolean!
  deleteOrganization(id: Int!): Boolean!
  deleteRole(id: Int!): Boolean!
  deleteUser(user_id: Int!): Boolean!
  deleteUserRole(id: Int!): Boolean!
  updateUserRole(id: Float!, newUserRoleData: NewUserRoleInput!): UserRole!
}

input NewApplicationInput {
  app_name: String!
}

input NewOrganizationInput {
  name: String!
}

input NewRoleInput {
  name: String!
  organization: Int
}

input NewUserInput {
  active: Boolean!
  email: String!
  is_email_verified: Boolean!
  password: String!
  username: String!
}

input NewUserRoleInput {
  app: Int!
  org: Int!
  role: Int!
  user_id: Int!
}

type Organization {
  id: Int!
  name: String!
}

type Query {
  applications: [Application!]!
  organizations: [Organization!]!
  roles: [Role!]!
  user(user_id: Int!): User!
  userRole(id: Int!): UserRole!
  userRoles(user_id: Int): [UserRole!]!
  users: [User!]!
}

type Role {
  id: Int!
  name: String!
  organization: Int!
}

type User {
  active: Boolean!
  created_at: Int!
  email: String!
  is_email_verified: Boolean!
  password: String!
  user_id: Int!
  username: String!
}

type UserRole {
  app: Int!
  application: Application!
  id: Int!
  org: Int!
  organization: Organization!
  role: Int!
  user: User!
  userRole: Role!
  user_id: Int!
}

scalar link__Import